{
  "id": "erc3643-compliance",
  "name": "RWA Compliance Pattern (ERC-3643)",
  "category": "Real World Assets",
  "description": "On-chain regulatory compliance for security tokens. Automated transfer restrictions, identity verification.",
  "when_to_use": "Regulated token transfers, security tokens, compliance automation",
  "benefits": "Automated compliance, transparent, jurisdiction-aware",
  "drawbacks": "Complex implementation, jurisdiction-specific rules",
  "use_cases": "Security tokens, RWA tokens, regulated DeFi",
  "complexity": "Very High",
  "tags": [
    "rwa",
    "compliance",
    "erc-3643",
    "security-token",
    "regulation"
  ],
  "examples": {
    "solidity": {
      "language": "solidity",
      "code": "import \"@onchainid/solidity/contracts/interface/IIdentity.sol\";\n\ncontract T_REX_Token is ERC20 {\n    IIdentityRegistry public identityRegistry;\n    IComplianceRegistry public complianceRegistry;\n    \n    function transfer(address to, uint256 amount) public override returns (bool) {\n        require(canTransfer(msg.sender, to, amount), \"Transfer not compliant\");\n        return super.transfer(to, amount);\n    }\n    \n    function canTransfer(address from, address to, uint256 amount) public view returns (bool) {\n        // Check identity verification\n        require(identityRegistry.isVerified(to), \"Recipient not verified\");\n        \n        // Check compliance rules (e.g., country restrictions, investor limits)\n        return complianceRegistry.checkCompliance(from, to, amount);\n    }\n}"
    }
  }
}